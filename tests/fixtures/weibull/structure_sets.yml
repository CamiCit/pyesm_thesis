# structure of sets

# set_key:
#     symbol: a  # symbol of the set 
#     table_name: _set_a # name of the table of the set in the database
#     split_problem: False # (optional) if the items of the set defines separate problems 
#     table_headers:
#         name: [a_Names, TYPE] # header of set entries names in database set table
#         aggregation: [a_Agg, TEXT] # (optional) header of set entries that are matching another set (aggregation)
#         filters:
#             0:  # (int) index of the category in the set
#                 header: [a_Cat_1, TEXT] 
#                 values: [a_1a, a_1b, a_1c]
#             1: 
#                 header: [a_Cat_2, TEXT] 
#                 values: [a_2a, a_2b]


# -----------------------------------------------------------------------------
# sets

case:
    symbol: c
    table_name: _set_CASES
    split_problem: True
    table_structure:
        name: [c_Name, TEXT]

years:
    symbol: y
    table_name: _set_YEARS
    table_structure:
        name: [y_Name, TEXT]
    
technologies:
    symbol: t
    table_name: _set_TECHNOLOGIES
    table_structure:
        name: [t_Name, TEXT]

tech_lifetime:
    symbol: tl
    table_name: _set_TECH_LIFETIME
    table_structure:
        name: [tl_Name, TEXT]
        filters: 
            0:
                header: [tl_type, TEXT]
                values: [Standard, Residual_start]

capacity:
    symbol: cap
    table_name: _set_CAPACITY
    table_structure:
        name: [cap_Name, TEXT]
        filters: 
            0:
                header: [cap_Type, TEXT]
                values: [New, Disposed_start, Disposed_new, Operational]
